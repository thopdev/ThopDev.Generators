
namespace ThopDev.Generator.Blazor.Routes.Models.Routing
{
    
    public class NavigationFactory
    {
        private const string Route = "";
        public TestRoute Test()
        {
            var route = Route + "/test";
            return new TestRoute(route);
        }
    }
    
    public class TestWithIdBlaIWithWhatRoute : RoutableBase
    {
        internal TestWithIdBlaIWithWhatRoute(string route): base(route)
        {
        }
    }
    
    public class TestWithIdBlaIRoute : RoutingBase
    {
        internal TestWithIdBlaIRoute(string route): base(route)
        {
        }
        public TestWithIdBlaIWithWhatRoute WithWhat(string what)
        {
            var route = Route + "/" + what;
            return new TestWithIdBlaIWithWhatRoute(route);
        }
    }
    
    public class TestWithIdBlaRoute : RoutingBase
    {
        internal TestWithIdBlaRoute(string route): base(route)
        {
        }
        public TestWithIdBlaIRoute I()
        {
            var route = Route + "/i";
            return new TestWithIdBlaIRoute(route);
        }
    }
    
    public class TestWithIdRoute : RoutableBase
    {
        internal TestWithIdRoute(string route): base(route)
        {
        }
        public TestWithIdBlaRoute Bla()
        {
            var route = Route + "/bla";
            return new TestWithIdBlaRoute(route);
        }
    }
    
    public class TestRoute : RoutingBase
    {
        internal TestRoute(string route): base(route)
        {
        }
        public TestWithIdRoute WithId(int id)
        {
            var route = Route + "/" + id;
            return new TestWithIdRoute(route);
        }
    }
}
